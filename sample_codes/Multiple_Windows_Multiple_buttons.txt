#include "../Files/Headers/BSDLF.h"
#include <iostream>
using namespace std;
int main(int argn, char** args)
{
    SDL_Init(SDL_INIT_EVERYTHING);
    bool val = true;
    SDL_Event event;
    SDL_Window * window1 = SDL_CreateWindow("Window1",
        50, SDL_WINDOWPOS_UNDEFINED, 640, 480, 0);
    SDL_Renderer* renderer1 = SDL_CreateRenderer(window1, -1, SDL_RENDERER_ACCELERATED);
    SDL_Window * window2 = SDL_CreateWindow("Window2",
        910, SDL_WINDOWPOS_UNDEFINED, 640, 480, 0);
    SDL_Renderer* renderer2 = SDL_CreateRenderer(window2, -1, SDL_RENDERER_ACCELERATED);
    bool keys[2];
    while(event.type != SDL_QUIT)
    {
        keys[0] = keys[1] = 0;
        Uint8 r1 = 0, g1 = 0, b1 = 0, a1 = 0;
        Uint8 r2 = 0, g2 = 0, b2 = 0, a2 = 0;
        static Uint8 i = 0;
        static Uint8 j = 0;
        if(*(SDL_GetKeyboardState(NULL) + (SDL_SCANCODE_UP)))i+=10;
        if(*(SDL_GetKeyboardState(NULL) + (SDL_SCANCODE_DOWN)))j+=10;
        if(*(SDL_GetKeyboardState(NULL) + (SDL_SCANCODE_ESCAPE)))break;
        SDL_PollEvent(&event);
        r1 = 10 * i;
        g1 = 20 * i;
        b1 = 30 * i;
        a1 = 40 * i;
        r2 = 10 * j;
        g2 = 20 * j;
        b2 = 30 * j;
        a2 = 40 * j;
        SDL_SetRenderDrawColor(renderer1, r1, g1, b1, a1);
        SDL_RenderPresent(renderer1);
        SDL_RenderClear(renderer1);
        SDL_SetRenderDrawColor(renderer2, r2, g2, b2, a2);
        SDL_RenderPresent(renderer2);
        SDL_RenderClear(renderer2);
        SDL_Delay(100);
    }
    SDL_Quit();
}